# Задача 10: На столе лежат n монеток. Некоторые из них лежат вверх решкой, 
# а некоторые – гербом. Определите минимальное число монеток, 
# которые нужно перевернуть, чтобы все монетки были повернуты вверх одной и 
# той же стороной. Выведите минимальное количество монет, 
# которые нужно перевернуть

# n = int(input("Введите количество монеток: "))
# reshka_count = 0
# gerb_count = 0

# for i in range(n):
#     side = int(input(f"Введите сторону монетки (0 - решка, 1 - герб): "))
#     if side == 0:
#         reshka_count += 1
#     else:
#         gerb_count += 1

# min_coins = min(reshka_count, gerb_count)
# print(f"Минимальное количество монет, которые нужно перевернуть: {min_coins}")

# Задача 12: Петя и Катя – брат и сестра. Петя – студент, а Катя – школьница. 
# Петя помогает Кате по математике. Он задумывает два натуральных числа
# X и Y (X,Y≤1000), а Катя должна их отгадать. 
# Для этого Петя делает две подсказки. Он называет сумму этих чисел S и
# их произведение P.                           
# Помогите Кате отгадать задуманные Петей числа.


# s = int(input('Задай сумму двух чисел: '))
# p = int(input('Задай произведение чисел: '))
 
# found_numbers = False
 
# for x in range(1, s):
#     for y in range(1, s):
#         if s == x + y and p == x * y:
#             print(f'Первое число: {x}, второе число: {y}')
#             found_numbers = True
 
# if not found_numbers:
#     print('Числа X и Y не удалось найти.')

# Задача 14: Требуется вывести все целые степени двойки (т.е. числа вида 2k), 
# не превосходящие числа N.

# N = int(input("Введите число N: "))

# k = 1
# degree_of_two = 2

# while degree_of_two <= N:
#     print(degree_of_two)
#     k += 1
#     degree_of_two = 2 ** k

# Задача 22: Даны два неупорядоченных набора целых чисел 
# (может быть, с повторениями). Выдать без повторений в порядке возрастания 
# все те числа, которые встречаются в обоих наборах. 
# Пользователь вводит 2 числа. n - кол-во элементов первого множества. 
# m - кол-во элементов второго множества. 
# Затем пользователь вводит сами элементы множеств.

# Пример:
# 11 6 
# 2 4 6 8 10 12 10 8 6 4 2 3 6 9 12 15 18 
# 6 12

n = int(input("Введите количество элементов первого множества: "))
set1 = set()

for i in range(n):
    element = int(input(f"Введите элемент {i+1} первого множества: "))
    set1.add(element)

m = int(input("Введите количество элементов второго множества: "))
set2 = set()

for i in range(m):
    element = int(input(f"Введите элемент {i+1} второго множества: "))
    set2.add(element)

common_elements = sorted(set1.intersection(set2))
for num in common_elements:
    print(num)